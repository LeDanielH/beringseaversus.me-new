var devel = 'devel/';
var deploy = 'deploy/';
var assetsSrc = devel + 'assets/';
var bower = 'bower_components/';

var paths = {

	deploy: './' + deploy + '/**/*',

	html: {
		src: devel + '/**/*.html',
		dest: deploy
	},

	styles: {
		modular: { // for example banners
			src: devel + '_pages/**/*.+(scss|sass)',
			dest: devel + '_pages/',
			watch: devel + '_pages/**/*.+(scss|sass)'
		},

		all: {
			src: assetsSrc + '_sass/*.+(scss|sass)', // will process only files without prepended underscore
			dest: assetsSrc + 'css/',
			watch: assetsSrc + '_sass/**/*.+(scss|sass)'
		}
	},

	scripts: {
		modular: {
			src: devel + '_pages/**/*.js',
			dest: devel + '_pages/',
			watch: devel +  '_pages/**/*.js'
		},
		all: {
			src: assetsSrc + '_scripts/',
			dest: assetsSrc
		}
	},

	images: {
		semantic: {
			src: bower + 'semantic-ui-sass/app/assets/images/**/*.+(jpg|png|svg)',
			dest: assetsSrc + 'images/semantic/'
		}
	},

	fonts: {
		semantic: {
			src: bower + 'semantic-ui-sass/app/assets/fonts/**/*.+(eot|ttf|woff|woff2|svg)',
			dest: assetsSrc + 'fonts/semantic/'
		}
	},

	libsSass: {
		semantic: {
			src: bower + 'semantic-ui-sass/app/assets/stylesheets/**/*.+(scss|sass)',
			dest: assetsSrc + '_sass/libs/semantic/'
		},
		bourbon: {
			src: bower + 'bourbon/app/assets/stylesheets/**/*.+(scss|sass)',
			dest: assetsSrc + '_sass/libs/bourbon/'
		},
		normalize: {
			src: bower + 'normalize-scss/sass/**/*.+(scss|sass)',
			dest: assetsSrc + '_sass/libs/normalize/'
		}
	},

	libsJS: {
		jquery: {
			src: {
				min: bower + 'jquery/dist/jquery.min.js',
				debug: bower + 'jquery/dist/jquery.js',
				slim: bower + 'jquery/dist/jquery.slim.min.js'
			},
			dest: assetsSrc + 'jslibs/transfered/jquery/'
		},

		semantic: {
			src: {
				min: bower + 'semantic-ui-sass/app/assets/javascripts/semantic-ui.js', // does not have minified version
				debug: bower + 'semantic-ui-sass/app/assets/javascripts/semantic-ui.js',
				modular: bower + 'semantic-ui-sass/app/assets/javascripts/**/*.js'
			},
			dest: assetsSrc + 'jslibs/transfered/semantic/'
		},

		vue: {
			src: {
				min: bower + 'vue/dist/vue.min.js',
				debug: bower + 'vue/dist/vue.js'
			},
			dest: assetsSrc + 'jslibs/transfered/vue/'
		},

		vueX: {
			src: {
				min: bower + 'vuex/dist/vuex.min.js',
				debug: bower + 'vuex/dist/vuex.js'
			},
			dest: assetsSrc + 'jslibs/transfered/vue/'
		},

		vueRouter: {
			src: {
				min: bower + 'vue-router/dist/vue-router.min.js',
				debug: bower + 'vue-router/dist/vue-router.js'
			},
			dest: assetsSrc + 'jslibs/transfered/vue/'
		},

		vueResource: {
			src: {
				min: bower + 'vue-resource/dist/vue-resource.min.js',
				debug: bower + 'vue-resource/dist/vue-resource.js'
			},
			dest: assetsSrc + 'jslibs/transfered/vue/'
		},

		gsap: {
			src: {
				min: bower + 'gsap/src/minified/**/*.js',
				debug: bower + 'gsap/src/uncompressed/**/*.js'
			},
			dest: assetsSrc + 'jslibs/transfered/gsap/'
		}
	},
	libsJSMerged: {
		dest: assetsSrc + 'jslibs/merged/'
	}
};


var renderedNames = {
	javascript: {
		// my scripts
		scripts: 'scripts.js',

		// libs
		semantic: {
			debug: 'semantic.js',
			min: 'semantic.min.js'
		},
		vue: {
			debug: 'vue.js',
			min: 'vue.min.js'
		},
		all: {
			debug: 'libs.js',
			min: 'libs.min.js'
		},
		banners: {
			debug: 'banner.js',
			min: 'banner.min.js'
		}
	}
};

var ignoreModernizr = '!' + paths.scripts.all.src + 'autogenerated/modernizr.js';
var watchedJsFiles = [ignoreModernizr, paths.scripts.all.src];

module.exports = {
	paths: paths,
	ignoreModernizr: ignoreModernizr,
	watchedJsFiles: watchedJsFiles,
	renderedNames: renderedNames
};
